from typing import List

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from database.models import Patent
from typing import Sequence

b1 = InlineKeyboardButton(
    text="üîç –ù–∞–π—Ç–∏ –Ω–∞—Å–∞–¥–∫—É –ø–æ –Ω–æ–º–µ—Ä—É –º–∏—Å—Å–∏–∏ üîç",
    callback_data="find_by_mission_pt"
)
b2 = InlineKeyboardButton(
    text="üîç –ù–∞–π—Ç–∏ –Ω–∞—Å–∞–¥–∫—É –ø–æ –Ω–æ–º–µ—Ä—É –∫–æ–º–∞–Ω–¥—ã üîç",
    callback_data="find_by_team_pt"
)
b3 = InlineKeyboardButton(
    text="‚èÆÔ∏è",
    callback_data="prev_page_pt"
)
b4 = InlineKeyboardButton(
    text="1",
    callback_data="select_page_pt"
)
b5 = InlineKeyboardButton(
    text="‚è≠Ô∏è",
    callback_data="next_page_pt"
)
b6 = InlineKeyboardButton(
    text="üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è Ô∏è üì¢",
    callback_data="publish_pt"
)
b7 = InlineKeyboardButton(
    text="üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—É–±–ª–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è üëÄ",
    callback_data="view_pt"
)
b_back = InlineKeyboardButton(
    text="–ù–∞–∑–∞–¥ ‚Ü©Ô∏è",
    callback_data="menu_pt"
)
b_again = InlineKeyboardButton(
    text="–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ",
    callback_data="publish_pt"
)
b_confirm = InlineKeyboardButton(
    text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ",
    callback_data="confirm_pt"
)

publish_row = [b6]
view_row = [b7]
back_row = [b_back]
again_row = [b_again]
confirm_row = [b_confirm]

zero_rows = [publish_row, back_row]
back_rows = [back_row]
confirm_rows = [back_row, again_row, confirm_row]
main_rows = [view_row, publish_row, back_row]

patent_kb_client = InlineKeyboardMarkup(inline_keyboard=main_rows)
zero_patent_kb_client = InlineKeyboardMarkup(inline_keyboard=zero_rows)
back_pt_client = InlineKeyboardMarkup(inline_keyboard=back_rows)
confirm_pt_client = InlineKeyboardMarkup(inline_keyboard=confirm_rows)


def get_patent_menu_keyboard(current_page: int, total_pages: int) -> InlineKeyboardMarkup:
    # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å, –µ—Å–ª–∏ –ø–∞—Ç–µ–Ω—Ç–æ–≤ –Ω–µ—Ç
    if total_pages == 0:
        total_pages = 1  # –ï—Å–ª–∏ –ø–∞—Ç–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, –ø—É—Å—Ç—å –±—É–¥–µ—Ç –æ–¥–Ω–∞ "–ø—É—Å—Ç–∞—è" —Å—Ç—Ä–∞–Ω–∏—Ü–∞

    b1m = InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –Ω–∞—Å–∞–¥–∫—É –ø–æ –Ω–æ–º–µ—Ä—É –º–∏—Å—Å–∏–∏ üîç", callback_data="find_by_mission_pt")
    b2m = InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –Ω–∞—Å–∞–¥–∫—É –ø–æ –Ω–æ–º–µ—Ä—É –∫–æ–º–∞–Ω–¥—ã üîç", callback_data="find_by_team_pt")
    b3m = InlineKeyboardButton(text="‚èÆÔ∏è", callback_data="prev_page_pt")
    b4m = InlineKeyboardButton(text=f"{current_page} | {total_pages}",
                              callback_data="select_page_pt")  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â—É—é/–≤—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    b5m = InlineKeyboardButton(text="‚è≠Ô∏è", callback_data="next_page_pt")
    b6m = InlineKeyboardButton(text="üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è üì¢", callback_data="publish_pt")
    b_back_m = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©Ô∏è", callback_data="menu_pt")  # Callback –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞

    first_row_m = [b1m]
    second_row_m = [b2m]
    third_row_m = [b3m, b4m, b5m]
    fourth_row_m = [b6m]
    back_row_m = [b_back_m]

    main_rows_m = [first_row_m, second_row_m, third_row_m, fourth_row_m, back_row_m]
    return InlineKeyboardMarkup(inline_keyboard=main_rows_m)

def get_input_page_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_input_pt")]
    ])


def get_team_patents_list_keyboard(patents: Sequence[Patent]) -> InlineKeyboardMarkup:
    keyboard = []
    if patents:
        for patent in patents:
            # –§–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏: –ù–∞–∑–≤–∞–Ω–∏–µ (–Ω–æ–º–µ—Ä–∞ –º–∏—Å—Å–∏–π)
            missions_str = ', '.join(map(str, patent.missions))
            button_text = f"{patent.caption} ({missions_str})"
            keyboard.append([
                InlineKeyboardButton(text=button_text, callback_data=f"view_patent_id_{patent.id}")
            ])

    keyboard.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–π ‚Ü©Ô∏è", callback_data="back_to_general_browsing_pt")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–≥–æ –ø–∞—Ç–µ–Ω—Ç–∞ (—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–±—â–µ–º—É —Å–ø–∏—Å–∫—É)
def get_single_patent_view_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–π ‚Ü©Ô∏è", callback_data="back_to_general_browsing_pt")]
    ])


def get_cancel_input_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel_input_pt")]
    ])


def get_confirm_join_team_keyboard() -> InlineKeyboardMarkup:  # –£–±—Ä–∞–ª–∏ admin_ids –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    keyboard_rows = [
        [InlineKeyboardButton(text="–î–∞, —ç—Ç–æ –º–æ—è –∫–æ–º–∞–Ω–¥–∞", callback_data="confirm_join_existing_team")],
        [InlineKeyboardButton(text="–ù–µ—Ç, —ç—Ç–æ –Ω–µ –º–æ—è –∫–æ–º–∞–Ω–¥–∞", callback_data="cancel_join_existing_team")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard_rows)